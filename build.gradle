buildscript {
    ext {
        springBootVersion = '2.5.3'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

allprojects {
    group 'com.ddoong2.skeleton'
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    sourceCompatibility = '1.8'

    jar {
        enabled = false
    }

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    test {
        useJUnitPlatform()
    }

    def generatedSourceDir = file("$projectDir/src/main/generated/")
    def generatedTestsSourceDir = file("$projectDir/src/test/generated_tests/")
    // IntelliJ IDEA 용
    def outClassesDir = file("$projectDir/out")
    clean.doLast {
        // clean-up directory when necessary
        file(generatedSourceDir).deleteDir()
        file(generatedTestsSourceDir).deleteDir()
        // IntelliJ IDEA 용
        file(outClassesDir).deleteDir()
    }
}