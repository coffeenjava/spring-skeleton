plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    group = 'com.ddoong2.skeleton'
    version = '0.1.0'
    sourceCompatibility = '11'

    jar {
        enabled = false
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        // @ConfigurationProperties를 사용하기 위한 의존성
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    }
    //https://docs.spring.io/spring-boot/docs/current/reference/html/configuration-metadata.html#configuration-metadata.annotation-processor.configuring
    compileJava.inputs.files(processResources)

    test {
        useJUnitPlatform()
    }

    clean.doLast {
        // clean-up directory when necessary
        file("$projectDir/src/main/generated/").deleteDir()
        file("$projectDir/src/test/generated_tests/").deleteDir()
        // IntelliJ IDEA 용
        file("$projectDir/out").deleteDir()
    }
}